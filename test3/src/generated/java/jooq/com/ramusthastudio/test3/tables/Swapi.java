/*
 * This file is generated by jOOQ.
*/
package com.ramusthastudio.test3.tables;


import com.ramusthastudio.test3.Keys;
import com.ramusthastudio.test3.Swapidb;
import com.ramusthastudio.test3.tables.records.SwapiRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.ULong;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Swapi extends TableImpl<SwapiRecord> {

    private static final long serialVersionUID = -1543157572;

    /**
     * The reference instance of <code>swapidb.swapi</code>
     */
    public static final Swapi SWAPI = new Swapi();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SwapiRecord> getRecordType() {
        return SwapiRecord.class;
    }

    /**
     * The column <code>swapidb.swapi.ID</code>.
     */
    public final TableField<SwapiRecord, ULong> ID = createField("ID", org.jooq.impl.SQLDataType.BIGINTUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>swapidb.swapi.NAME</code>.
     */
    public final TableField<SwapiRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>swapidb.swapi.GENDER</code>.
     */
    public final TableField<SwapiRecord, String> GENDER = createField("GENDER", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>swapidb.swapi.HOMEWORLD</code>.
     */
    public final TableField<SwapiRecord, String> HOMEWORLD = createField("HOMEWORLD", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>swapidb.swapi</code> table reference
     */
    public Swapi() {
        this("swapi", null);
    }

    /**
     * Create an aliased <code>swapidb.swapi</code> table reference
     */
    public Swapi(String alias) {
        this(alias, SWAPI);
    }

    private Swapi(String alias, Table<SwapiRecord> aliased) {
        this(alias, aliased, null);
    }

    private Swapi(String alias, Table<SwapiRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Swapidb.SWAPIDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SwapiRecord, ULong> getIdentity() {
        return Keys.IDENTITY_SWAPI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SwapiRecord> getPrimaryKey() {
        return Keys.KEY_SWAPI_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SwapiRecord>> getKeys() {
        return Arrays.<UniqueKey<SwapiRecord>>asList(Keys.KEY_SWAPI_PRIMARY, Keys.KEY_SWAPI_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Swapi as(String alias) {
        return new Swapi(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Swapi rename(String name) {
        return new Swapi(name, null);
    }
}
